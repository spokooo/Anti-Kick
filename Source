--// Cache
local getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller, lower, gsub, match = getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller, string.lower, string.gsub, string.match

--// Loaded check
if getgenv().ED_AntiKick then
    return
end

--// Variables
local cloneref = cloneref or function(...) 
    return ...
end

local clonefunction = clonefunction or function(...)
    return ...
end

local Players, LocalPlayer, StarterGui = cloneref(game:GetService("Players")), cloneref(game:GetService("Players").LocalPlayer), cloneref(game:GetService("StarterGui"))

local SetCore = clonefunction(StarterGui.SetCore)
--local GetDebugId = clonefunction(game.GetDebugId)
local FindFirstChild = clonefunction(game.FindFirstChild)

local CompareInstances = (CompareInstances and function(Instance1, Instance2)
        if typeof(Instance1) == "Instance" and typeof(Instance2) == "Instance" then
            return CompareInstances(Instance1, Instance2)
        end
    end)
or
function(Instance1, Instance2)
    return (typeof(Instance1) == "Instance" and typeof(Instance2) == "Instance")-- and GetDebugId(Instance1) == GetDebugId(Instance2)
end

local CanCastToSTDString = function(...)
    return pcall(FindFirstChild, game, ...)
end

--// Global Variables
getgenv().ED_AntiKick = {
    Enabled = true, -- Set to false if you want to disable the Anti-Kick.
    SendNotifications = true, -- Set to true if you want to get notified for every event.
    CheckCaller = false -- Set to false to disable the CheckCaller feature (fixes nil indexing error).
}

--// Main

local OldNamecall; OldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
    local self, message = ...
    local method = getnamecallmethod()
    
    -- Safely handle CheckCaller with pcall to avoid errors
    local isCallerValid = true -- Default to true if CheckCaller is unavailable
    if ED_AntiKick.CheckCaller then
        local success, result = pcall(checkcaller)
        isCallerValid = success and result or true -- If checkcaller fails, assume valid to avoid breaking
    end
    
    if (isCallerValid or not ED_AntiKick.CheckCaller) and CompareInstances(self, LocalPlayer) and gsub(method, "^%l", string.upper) == "Kick" and ED_AntiKick.Enabled then
        if CanCastToSTDString(message) then
            if ED_AntiKick.SendNotifications then
                SetCore(StarterGui, "SendNotification", {
                    Title = "Exunys Developer - Anti-Kick",
                    Text = "Successfully intercepted an attempted kick.",
                    Icon = "rbxassetid://6238540373",
                    Duration = 2
                })
            end
            return -- Prevent the kick
        end
    end

    return OldNamecall(...)
end))

local OldFunction; OldFunction = hookfunction(LocalPlayer.Kick, function(...)
    local self, Message = ...

    -- Safely handle CheckCaller with pcall to avoid errors
    local isCallerValid = true -- Default to true if CheckCaller is unavailable
    if ED_AntiKick.CheckCaller then
        local success, result = pcall(checkcaller)
        isCallerValid = success and result or true -- If checkcaller fails, assume valid to avoid breaking
    end
    
    if (isCallerValid or not ED_AntiKick.CheckCaller) and CompareInstances(self, LocalPlayer) and ED_AntiKick.Enabled then
        if CanCastToSTDString(Message) then
            if ED_AntiKick.SendNotifications then
                SetCore(StarterGui, "SendNotification", {
                    Title = "Exunys Developer - Anti-Kick",
                    Text = "Successfully intercepted an attempted kick.",
                    Icon = "rbxassetid://6238540373",
                    Duration = 2
                })
            end
            return -- Prevent the kick
        end
    end
    return OldFunction(...) -- Allow original function if conditions aren't met
end)

if getgenv().ED_AntiKick.SendNotifications then
    StarterGui:SetCore("SendNotification", {
        Title = "Exunys Developer - Anti-Kick",
        Text = "Anti-Kick script loaded!",
        Icon = "rbxassetid://6238537240",
        Duration = 3
    })
end
